{"ast":null,"code":"import _toConsumableArray from \"D:/Skillcrush BIT/sticky_note/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"D:/Skillcrush BIT/sticky_note/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"D:\\\\Skillcrush BIT\\\\sticky_note\\\\src\\\\App.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Header from \"./Header\";\nimport NoteList from \"./NoteList\";\nimport { useEffect } from \"react\";\nvar App = function App() {\n  _s();\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    notes = _React$useState2[0],\n    setNotes = _React$useState2[1];\n  var _React$useState3 = React.useState(\"\"),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    searchText = _React$useState4[0],\n    setSearchText = _React$useState4[1];\n  useEffect(function () {\n    // Save notes to local storage whenever the notes state changes\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  useEffect(function () {\n    // Load notes from local storage when the component mounts\n    var updatedNotes = JSON.parse(localStorage.getItem(\"notes\"));\n    if (updatedNotes) {\n      setNotes(updatedNotes);\n      console.log(updatedNotes);\n    }\n  }, []);\n  var addNote = function addNote() {\n    var newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    setNotes([newNote].concat(_toConsumableArray(notes)));\n    //console.log(notes);\n  };\n\n  var onType = function onType(editMeId, updatedKey, updatedValue) {\n    var updatedNotes = notes.map(function (note) {\n      if (note.id !== editMeId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n    setNotes(updatedNotes);\n  };\n  var onSearch = function onSearch(text) {\n    var newSearchText = text.toLowerCase();\n    var updatedNotes = notes.map(function (note) {\n      if (!newSearchText) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        var hasMatch = note.title.toLowerCase().includes(newSearchText.toLowerCase()) || note.description.toLowerCase().includes(newSearchText.toLowerCase());\n        note.doesMatchSearch = hasMatch;\n        return note;\n      }\n    });\n    setNotes(updatedNotes);\n    setSearchText(newSearchText);\n  };\n  var deleteNote = function deleteNote(noteId) {\n    var updatedNotes = notes.filter(function (note) {\n      return note.id !== noteId;\n    });\n    setNotes(updatedNotes);\n  };\n\n  //const filterContent = notes.filter((note) => note.doesMatchSearch);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    searchText: searchText,\n    addNote: addNote,\n    onSearch: onSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NoteList, {\n    notes: notes,\n    onType: onType,\n    deleteNote: deleteNote,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n};\n_s(App, \"c48djLuwgwQUGDAqu2n3Na4z+0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","NoteList","useEffect","App","_s","_React$useState","useState","_React$useState2","_slicedToArray","notes","setNotes","_React$useState3","_React$useState4","searchText","setSearchText","localStorage","setItem","JSON","stringify","updatedNotes","parse","getItem","console","log","addNote","newNote","id","Date","now","title","description","doesMatchSearch","concat","_toConsumableArray","onType","editMeId","updatedKey","updatedValue","map","note","onSearch","text","newSearchText","toLowerCase","hasMatch","includes","deleteNote","noteId","filter","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Skillcrush BIT/sticky_note/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport NoteList from \"./NoteList\";\nimport { useEffect } from \"react\"\n\nconst App = () => {\n  const [notes, setNotes] = React.useState([]);\n  const [searchText, setSearchText] = React.useState(\"\");\n\n  useEffect(() => {\n    // Save notes to local storage whenever the notes state changes\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  useEffect(() => {\n    // Load notes from local storage when the component mounts\n    const updatedNotes = JSON.parse(localStorage.getItem(\"notes\"));\n    if (updatedNotes) {\n      setNotes(updatedNotes);\n      console.log(updatedNotes);\n    }\n  }, []); \n\n  const addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    setNotes([newNote, ...notes]);\n    //console.log(notes);\n  };\n\n  const onType = (editMeId, updatedKey, updatedValue) => {\n    const updatedNotes = notes.map((note) => {\n      if (note.id !== editMeId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n    setNotes(updatedNotes);\n  };\n\n  const onSearch = (text) => {\n    const newSearchText = text.toLowerCase();\n    const updatedNotes = notes.map((note) => {\n      if (!newSearchText) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const hasMatch =\n          note.title.toLowerCase().includes(newSearchText.toLowerCase()) ||\n          note.description.toLowerCase().includes(newSearchText.toLowerCase());\n        note.doesMatchSearch = hasMatch;\n        return note;\n      }\n    });\n    setNotes(updatedNotes);\n    setSearchText(newSearchText);\n  };\n\n  const deleteNote = (noteId) => {\n    const updatedNotes = notes.filter((note) => note.id !== noteId);\n    setNotes(updatedNotes);\n  };\n\n  //const filterContent = notes.filter((note) => note.doesMatchSearch);\n\n  return (\n    <div>\n      <Header searchText={searchText} addNote={addNote} onSearch={onSearch} />\n      <NoteList notes={notes} onType={onType} deleteNote={deleteNote} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}